# -*- coding: utf-8 -*-
"""Exp 3  Exploratory data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10LAkpzWIkftx4c8Ln8YNl1mqArvcCkiX

Exploratory Data Analysis
"""

#Dataset : AQI
#1.Read the given dataset

import pandas as pd
a_df = pd.read_csv("aqi.csv")

#2. Display the top 15 & Bottom 15 rows.
#URK21CS7004

print(a_df.head(15))
print(a_df.tail(15))

#3.Display the column name
#URK21CS7004

print(a_df.columns)

#4. Display the information about the columns.
#URK21CS7004

print(a_df.info())

#5. Display Statistical Information about the Integer columns of the dataset.
#URK21CS7004

print(a_df.describe())

#6. Count the number of days where the air quality is less than 100.
#URK21CS7004

import pandas as pd
a_df = pd.read_csv("aqi.csv")

len(a_df[a_df["AQI"]<100])

#7.Find the average air quality from 2017 to 2022.
#URK21CS7004

for x in range(17,23):
    print("20"+str(x),":",a_df[a_df.Mounths.str.contains(str(x))].AQI.mean())

#8.Sort the dataframe according to ammonia level and create new dataframe.
#URK21CS7004

import pandas as pd
new = a_df.sort_values(by="Ammonia - NH3  in æg/m3",ascending=True)
new

#9. Group the dataframe based on CO value.
#URK21CS7004

a_df.groupby("CO  in mg/m3").first()

#10. Group the dataframe based on Benzene Value.
#URK21CS7004

a_df.groupby("Benzene  in æg/m3").first()

#2 DATASET MALL CUSTOERS

#1. Read the given dataset.

mall_df = pd.read_csv("mall_customers.csv")

#2. Display the top 15 & Bottom 15 rows.

print(mall_df.head(15))

print(mall_df.tail(15))

#3. Display the column name.

print(mall_df.columns)

#4. Display the information about the columns.

print(mall_df.info())

#5. Display Statistical Information about the Integer columns of the dataset.

print(mall_df.describe())

#6. Count the number of people whose spend score is less than 50.

len(mall_df[mall_df["Spending Score (1-100)"]<50])

#7. Find the average age of Male & Female in the dataset.

mall_df[mall_df.Gender=="Male"].Age.mean()
mall_df[mall_df.Gender=="Female"].Age.mean()

#8. Sort the dataframe according to the annual income.

mall_df.sort_values(by="Annual Income (k$)",ascending=True)

#9. Find the number of male & female in every age group.

#10. Group the dataframe based on spend score.

mall_df.groupby("Spending Score (1-100)").first()

